// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// calculate_r2
double calculate_r2(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP _SA24204182_calculate_r2(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_r2(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// calculate_mse
double calculate_mse(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP _SA24204182_calculate_mse(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_mse(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// gradient_descent_with_regularization
NumericVector gradient_descent_with_regularization(NumericMatrix X, NumericVector y, double learning_rate, int iterations, double lambda);
RcppExport SEXP _SA24204182_gradient_descent_with_regularization(SEXP XSEXP, SEXP ySEXP, SEXP learning_rateSEXP, SEXP iterationsSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type learning_rate(learning_rateSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(gradient_descent_with_regularization(X, y, learning_rate, iterations, lambda));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SA24204182_calculate_r2", (DL_FUNC) &_SA24204182_calculate_r2, 2},
    {"_SA24204182_calculate_mse", (DL_FUNC) &_SA24204182_calculate_mse, 2},
    {"_SA24204182_gradient_descent_with_regularization", (DL_FUNC) &_SA24204182_gradient_descent_with_regularization, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_SA24204182(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
